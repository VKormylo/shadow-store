{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vital\\\\OneDrive\\\\Desktop\\\\ShadowStore\\\\shadow-store\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  MongoClient\n} = require(\"mongodb\"); // Replace the uri string with your MongoDB deployment's connection string.\n\n\nconst uri = \"mongodb+srv://Vitaliy:vitadmin@shadowcluster.5gc07.mongodb.net/shop\";\nconst client = new MongoClient(uri);\n\nasync function run() {\n  try {\n    await client.connect();\n    const database = client.db('sample_mflix');\n    const collection = database.collection('shop'); // Query for a movie that has the title 'Back to the Future'\n\n    const query = {\n      title: 'Back to the Future'\n    };\n    const movie = await collection.findOne(query);\n    console.log(movie);\n  } finally {\n    // Ensures that the client will close when you finish/error\n    await client.close();\n  }\n}\n\nrun().catch(console.dir); // const mongoose = require(\"mongoose\");\n// async function start() {\n//   try {\n//     await mongoose.connect(\n//       \"mongodb+srv://Vitaliy:vitadmin@shadowcluster.5gc07.mongodb.net/shop\",\n//       {\n//         useNewUrlParser: true,\n//         useUnifiedTopology: true,\n//         useCreateIndex: true\n//       }\n//     );\n//   } catch (e) {\n//     console.log(\"Server Error\", e.message);\n//   }\n// }\n// start();\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/vital/OneDrive/Desktop/ShadowStore/shadow-store/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Provider","store","BrowserRouter","MongoClient","require","uri","client","run","connect","database","db","collection","query","title","movie","findOne","console","log","close","catch","dir","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAkBC,OAAO,CAAC,SAAD,CAA/B,C,CACA;;;AACA,MAAMC,GAAG,GACP,qEADF;AAEA,MAAMC,MAAM,GAAG,IAAIH,WAAJ,CAAgBE,GAAhB,CAAf;;AACA,eAAeE,GAAf,GAAqB;AACnB,MAAI;AACF,UAAMD,MAAM,CAACE,OAAP,EAAN;AACA,UAAMC,QAAQ,GAAGH,MAAM,CAACI,EAAP,CAAU,cAAV,CAAjB;AACA,UAAMC,UAAU,GAAGF,QAAQ,CAACE,UAAT,CAAoB,MAApB,CAAnB,CAHE,CAIF;;AACA,UAAMC,KAAK,GAAG;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAd;AACA,UAAMC,KAAK,GAAG,MAAMH,UAAU,CAACI,OAAX,CAAmBH,KAAnB,CAApB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,GARD,SAQU;AACR;AACA,UAAMR,MAAM,CAACY,KAAP,EAAN;AACD;AACF;;AACDX,GAAG,GAAGY,KAAN,CAAYH,OAAO,CAACI,GAApB,E,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAvB,QAAQ,CAACwB,MAAT,eACE,QAAC,aAAD;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEpB,KAAjB;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEqB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAxB,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst { MongoClient } = require(\"mongodb\");\n// Replace the uri string with your MongoDB deployment's connection string.\nconst uri =\n  \"mongodb+srv://Vitaliy:vitadmin@shadowcluster.5gc07.mongodb.net/shop\";\nconst client = new MongoClient(uri);\nasync function run() {\n  try {\n    await client.connect();\n    const database = client.db('sample_mflix');\n    const collection = database.collection('shop');\n    // Query for a movie that has the title 'Back to the Future'\n    const query = { title: 'Back to the Future' };\n    const movie = await collection.findOne(query);\n    console.log(movie);\n  } finally {\n    // Ensures that the client will close when you finish/error\n    await client.close();\n  }\n}\nrun().catch(console.dir);\n\n// const mongoose = require(\"mongoose\");\n\n// async function start() {\n//   try {\n//     await mongoose.connect(\n//       \"mongodb+srv://Vitaliy:vitadmin@shadowcluster.5gc07.mongodb.net/shop\",\n//       {\n//         useNewUrlParser: true,\n//         useUnifiedTopology: true,\n//         useCreateIndex: true\n//       }\n//     );\n//   } catch (e) {\n//     console.log(\"Server Error\", e.message);\n//   }\n// }\n\n// start();\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}