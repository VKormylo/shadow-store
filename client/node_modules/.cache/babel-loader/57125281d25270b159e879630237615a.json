{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport translationEN from \"../locales/en/translationEN.json\";\nimport translationRU from \"../locales/ru/translationRU.json\";\nlet initialState = {\n  language: \"en\"\n};\nconst SET_LANGUAGE = \"SET_LANGUAGE\";\n\nconst languageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LANGUAGE:\n      return { ...state,\n        games: [...action.games]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setLanguage = language => ({\n  type: SET_LANGUAGE,\n  language\n});\nexport const addToLibrary = gameId => async dispatch => {\n  dispatch(toggleIsLoading(true));\n  dispatch(addToLibraryAC(gameId));\n  const response = await libraryAPI.addToLibrary(gameId);\n  dispatch(setShop(response.data.games));\n  dispatch(toggleIsLoading(false));\n  console.log(response.data.games);\n};\nexport { languageReducer };\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  ru: {\n    translation: translationRU\n  }\n};\ni18n.use(initReactI18next).init({\n  resources,\n  fallbackLng: initialState.language,\n  interpolation: {\n    escapeValue: false\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["C:/Users/vital/OneDrive/Desktop/ShadowStore/shadow-store/src/redux/language-reducer.js"],"names":["i18n","initReactI18next","translationEN","translationRU","initialState","language","SET_LANGUAGE","languageReducer","state","action","type","games","setLanguage","addToLibrary","gameId","dispatch","toggleIsLoading","addToLibraryAC","response","libraryAPI","setShop","data","console","log","resources","en","translation","ru","use","init","fallbackLng","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAAnB;AAIA,MAAMC,YAAY,GAAG,cAArB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,YAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYG,QAAAA,KAAK,EAAE,CAAC,GAAGF,MAAM,CAACE,KAAX;AAAnB,OAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,OAAO,MAAMI,WAAW,GAAIP,QAAD,KAAe;AAAEK,EAAAA,IAAI,EAAEJ,YAAR;AAAsBD,EAAAA;AAAtB,CAAf,CAApB;AAEP,OAAO,MAAMQ,YAAY,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC1DA,EAAAA,QAAQ,CAACC,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAD,EAAAA,QAAQ,CAACE,cAAc,CAACH,MAAD,CAAf,CAAR;AACA,QAAMI,QAAQ,GAAG,MAAMC,UAAU,CAACN,YAAX,CAAwBC,MAAxB,CAAvB;AACAC,EAAAA,QAAQ,CAACK,OAAO,CAACF,QAAQ,CAACG,IAAT,CAAcV,KAAf,CAAR,CAAR;AACAI,EAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,IAAT,CAAcV,KAA1B;AACD,CAPM;AASP,SAASJ,eAAT;AAEA,MAAMiB,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,WAAW,EAAExB;AADX,GADY;AAIhByB,EAAAA,EAAE,EAAE;AACFD,IAAAA,WAAW,EAAEvB;AADX;AAJY,CAAlB;AASAH,IAAI,CAAC4B,GAAL,CAAS3B,gBAAT,EAA2B4B,IAA3B,CAAgC;AAC9BL,EAAAA,SAD8B;AAE9BM,EAAAA,WAAW,EAAE1B,YAAY,CAACC,QAFI;AAG9B0B,EAAAA,aAAa,EAAE;AAAEC,IAAAA,WAAW,EAAE;AAAf;AAHe,CAAhC;AAMA,eAAehC,IAAf","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport translationEN from \"../locales/en/translationEN.json\";\r\nimport translationRU from \"../locales/ru/translationRU.json\";\r\n\r\nlet initialState = {\r\n  language: \"en\",\r\n};\r\n\r\nconst SET_LANGUAGE = \"SET_LANGUAGE\";\r\n\r\nconst languageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LANGUAGE:\r\n      return { ...state, games: [...action.games] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setLanguage = (language) => ({ type: SET_LANGUAGE, language });\r\n\r\nexport const addToLibrary = (gameId) => async (dispatch) => {\r\n  dispatch(toggleIsLoading(true));\r\n  dispatch(addToLibraryAC(gameId));\r\n  const response = await libraryAPI.addToLibrary(gameId);\r\n  dispatch(setShop(response.data.games));\r\n  dispatch(toggleIsLoading(false));\r\n  console.log(response.data.games);\r\n};\r\n\r\nexport { languageReducer };\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN,\r\n  },\r\n  ru: {\r\n    translation: translationRU,\r\n  },\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources,\r\n  fallbackLng: initialState.language,\r\n  interpolation: { escapeValue: false },\r\n});\r\n\r\nexport default i18n;\r\n"]},"metadata":{},"sourceType":"module"}