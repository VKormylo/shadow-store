{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vital\\\\OneDrive\\\\Desktop\\\\ShadowStore\\\\shadow-store\\\\src\\\\components\\\\Settings\\\\Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport i18n from \"../../i18n\";\nimport s from \"./Settings.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = props => {\n  _s();\n\n  console.log(props);\n  const [isShowed, show] = useState(false);\n  const sel = /*#__PURE__*/React.createRef();\n\n  const changeLanguage = () => {\n    return () => {\n      i18n.changeLanguage(sel.current.value);\n      console.log(sel.current.value);\n      show(true);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.settings,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.main,\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        className: s.header,\n        to: \"/shop\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.back,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.text,\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.language,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.lText,\n          children: \"Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: s.select,\n            ref: sel,\n            name: \"language\",\n            onChange: changeLanguage(),\n            children: [props.settingsPage.language === \"en\" ? /*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: \"en\",\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"en\",\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), props.settingsPage.language === \"en\" ? /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ru\",\n              children: \"Russia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: \"ru\",\n              children: \"Russia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${s.changeLng} + ${isShowed ? s.show : s.hidden}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.title,\n            children: \"Change Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.text,\n            children: \"If you confirm, the language will be changed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.btns,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.btnConfirm,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.btnCa,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.setLanguage(sel.current.value),\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Settings, \"i7iaDaclFgBOClYz1dGIj/wjvqw=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Users/vital/OneDrive/Desktop/ShadowStore/shadow-store/src/components/Settings/Settings.jsx"],"names":["React","useState","NavLink","i18n","s","Settings","props","console","log","isShowed","show","sel","createRef","changeLanguage","current","value","settings","main","header","back","text","language","lText","select","settingsPage","changeLng","hidden","container","content","title","btns","btnConfirm","btnCa","setLanguage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport i18n from \"../../i18n\";\r\nimport s from \"./Settings.module.css\";\r\n\r\nconst Settings = (props) => {\r\n  console.log(props);\r\n\r\n  const [isShowed, show] = useState(false);\r\n\r\n  const sel = React.createRef();\r\n\r\n  const changeLanguage = () => {\r\n    return () => {\r\n      i18n.changeLanguage(sel.current.value);\r\n      console.log(sel.current.value);\r\n      show(true);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className={s.settings}>\r\n      <div className={s.main}>\r\n        <NavLink className={s.header} to=\"/shop\">\r\n          <div className={s.back}>\r\n            <span></span>\r\n          </div>\r\n          <div className={s.text}>Settings</div>\r\n        </NavLink>\r\n        <div className={s.language}>\r\n          <div className={s.lText}>Language</div>\r\n          <form>\r\n            <select\r\n              className={s.select}\r\n              ref={sel}\r\n              name=\"language\"\r\n              onChange={changeLanguage()}\r\n            >\r\n              {props.settingsPage.language === \"en\" ? (\r\n                <option selected value=\"en\">\r\n                  English\r\n                </option>\r\n              ) : (\r\n                <option value=\"en\">English</option>\r\n              )}\r\n              {props.settingsPage.language === \"en\" ? (\r\n                <option value=\"ru\">Russia</option>\r\n              ) : (\r\n                <option selected value=\"ru\">\r\n                  Russia\r\n                </option>\r\n              )}\r\n            </select>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className={`${s.changeLng} + ${isShowed ? s.show : s.hidden}`}>\r\n        <div className={s.container}>\r\n          <div className={s.content}>\r\n            <div className={s.title}>Change Language</div>\r\n            <div className={s.text}>\r\n              If you confirm, the language will be changed.\r\n            </div>\r\n          </div>\r\n          <div className={s.btns}>\r\n            <div className={s.btnConfirm}>\r\n              <a>Cancel</a>\r\n            </div>\r\n            <div className={s.btnCa}>\r\n              <a>Confirm</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button onClick={() => props.setLanguage(sel.current.value)}>\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}