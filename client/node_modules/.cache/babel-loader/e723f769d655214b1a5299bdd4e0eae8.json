{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vital\\\\OneDrive\\\\Desktop\\\\ShadowStore\\\\shadow-store\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  MongoClient\n} = require(\"mongodb\");\n\nconst uri = \"mongodb+srv://Vitaliy:<password>@shadowcluster.5gc07.mongodb.net/<dbname>?retryWrites=true&w=majority\";\nconst client = new MongoClient(uri);\n\nasync function run() {\n  try {\n    await client.connect();\n    await client.db(\"admin\").command({\n      ping: 1\n    });\n    console.log(\"Connected successfully to server\");\n  } finally {\n    await client.close();\n  }\n}\n\nrun();\n\nconst mongoose = require(\"mongoose\");\n\nasync function start() {\n  try {\n    mongoose.connect(\"mongodb+srv://Vitaliy:<password>@shadowcluster.5gc07.mongodb.net/<dbname>?retryWrites=true&w=majority\", {\n      useNewUrlParser: true\n    });\n  } catch (e) {\n    console.log(\"Server Error\", e.message);\n  }\n}\n\nstart();\nReactDOM.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/vital/OneDrive/Desktop/ShadowStore/shadow-store/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","Provider","store","BrowserRouter","MongoClient","require","uri","client","run","connect","db","command","ping","console","log","close","mongoose","start","useNewUrlParser","e","message","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAkBC,OAAO,CAAC,SAAD,CAA/B;;AACA,MAAMC,GAAG,GAAE,uGAAX;AACA,MAAMC,MAAM,GAAG,IAAIH,WAAJ,CAAgBE,GAAhB,CAAf;;AACA,eAAeE,GAAf,GAAqB;AACnB,MAAI;AACF,UAAMD,MAAM,CAACE,OAAP,EAAN;AACA,UAAMF,MAAM,CAACG,EAAP,CAAU,OAAV,EAAmBC,OAAnB,CAA2B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAA3B,CAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,GAJD,SAIU;AACR,UAAMP,MAAM,CAACQ,KAAP,EAAN;AACD;AACF;;AAEDP,GAAG;;AAEH,MAAMQ,QAAQ,GAAGX,OAAO,CAAC,UAAD,CAAxB;;AAEA,eAAeY,KAAf,GAAuB;AACrB,MAAI;AACAD,IAAAA,QAAQ,CAACP,OAAT,CAAiB,uGAAjB,EAA0H;AAC1HS,MAAAA,eAAe,EAAE;AADyG,KAA1H;AAGH,GAJD,CAIE,OAAOC,CAAP,EAAU;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BK,CAAC,CAACC,OAA9B;AACD;AACF;;AAEDH,KAAK;AAELnB,QAAQ,CAACuB,MAAT,eACE,QAAC,aAAD;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEnB,KAAjB;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEoB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAvB,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst { MongoClient } = require(\"mongodb\");\nconst uri =\"mongodb+srv://Vitaliy:<password>@shadowcluster.5gc07.mongodb.net/<dbname>?retryWrites=true&w=majority\";\nconst client = new MongoClient(uri);\nasync function run() {\n  try {\n    await client.connect();\n    await client.db(\"admin\").command({ ping: 1 });\n    console.log(\"Connected successfully to server\");\n  } finally {\n    await client.close();\n  }\n}\n\nrun();\n\nconst mongoose = require(\"mongoose\");\n\nasync function start() {\n  try {\n      mongoose.connect(\"mongodb+srv://Vitaliy:<password>@shadowcluster.5gc07.mongodb.net/<dbname>?retryWrites=true&w=majority\", {\n      useNewUrlParser: true\n    });\n  } catch (e) {\n    console.log(\"Server Error\", e.message);\n  }\n}\n\nstart();\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}