{"ast":null,"code":"import React, { useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport s from \"./Game.module.css\"; // const Game = ({ removeFromLibrary, ...props }) => {\n//   console.log(props);\n//   const [redirect, set] = useState(false);\n//   const setRedirect = () => {\n//     set(true);\n//   };\n//   // const doRedirect = () => {\n//   //   if (redirect) {\n//   //     return <Redirect to={{pathname: \"/gamepage\", state: {...props, addToLibrary: {...addToLibrary}} }} />;\n//   //   }\n//   // };\n//   const doRedirect = (addToLibrary) => {\n//     if (redirect) {\n//       return <Redirect to={{pathname: \"/gamepage\", state: {game: props.game, addToLibrary: {addToLibrary}}}} />;\n//     }\n//   };\n//   let history = useHistory();\n//   const redirec = () => {\n//     history.push({pathname: \"/gamepage\", state: {...props}});\n//   };\n//   return (\n//     <div className={s.game}>\n//     {doRedirect()}\n//       <div onClick={redirec}>\n//         <a className={s.photo}>\n//           <img src={props.photo} />\n//         </a>\n//         <div className={s.name}>{props.name}</div>\n//         {props.lib === \"true\" ? (\n//           \"\"\n//         ) : (\n//           <div className={s.dev}>{props.developer}</div>\n//         )}\n//         <div className={s.action}>\n//           {props.price === \"Free\" ? (\n//             <div className={s.price}>{props.price}</div>\n//           ) : (\n//             <div className={s.price}>{props.price} ₴</div>\n//           )}\n//         </div>\n//       </div>\n//       <div className={s.btnAdd}>\n//         {props.game.added ? (\n//           <a\n//             onClick={() => {\n//               removeFromLibrary(props.game.id);\n//             }}\n//             href=\"#\"\n//           >\n//             Remove from library\n//           </a>\n//         ) : (\n//           <a\n//             onClick={() => {\n//               props.addToLibrary(props.game.id);\n//             }}\n//             href=\"#\"\n//           >\n//             Add to library\n//           </a>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n// class Game extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     console.log(props);\n//   }\n//   //  doRedirect = (addToLibrary) => {\n//   //   if (redirect) {\n//   //     return <Redirect to={{pathname: \"/gamepage\", state: {game: props.game, addToLibrary: {addToLibrary}}}} />;\n//   //   }\n//   // };\n//   redirect = () => {\n//     const { history } = this.props;\n//     history.push(\"/gamepage\", {state: this.props} );\n//   };\n//   render() {\n//     return (\n//       <div className={s.game}>\n//         <div onClick={this.redirect}>\n//           <a className={s.photo}>\n//             <img src={this.props.photo} />\n//           </a>\n//           <div className={s.name}>{this.props.name}</div>\n//           {this.props.lib === \"true\" ? (\n//             \"\"\n//           ) : (\n//             <div className={s.dev}>{this.props.developer}</div>\n//           )}\n//           <div className={s.action}>\n//             {this.props.price === \"Free\" ? (\n//               <div className={s.price}>{this.props.price}</div>\n//             ) : (\n//               <div className={s.price}>{this.props.price} ₴</div>\n//             )}\n//           </div>\n//         </div>\n//         <div className={s.btnAdd}>\n//           {this.props.game.added ? (\n//             <a\n//               onClick={() => {\n//                 this.props.removeFromLibrary(this.props.game.id);\n//               }}\n//               href=\"#\"\n//             >\n//               Remove from library\n//             </a>\n//           ) : (\n//             <a\n//               onClick={() => {\n//                 this.props.addToLibrary(this.props.game.id);\n//               }}\n//               href=\"#\"\n//             >\n//               Add to library\n//             </a>\n//           )}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/vital/OneDrive/Desktop/ShadowStore/shadow-store/src/components/Shop/Game/Game.jsx"],"names":["React","useState","Redirect","useHistory","s","Game"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,OAAOC,CAAP,MAAc,mBAAdeAAeC,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport s from \"./Game.module.css\";\r\n\r\n// const Game = ({ removeFromLibrary, ...props }) => {\r\n//   console.log(props);\r\n\r\n//   const [redirect, set] = useState(false);\r\n\r\n//   const setRedirect = () => {\r\n//     set(true);\r\n//   };\r\n\r\n//   // const doRedirect = () => {\r\n//   //   if (redirect) {\r\n//   //     return <Redirect to={{pathname: \"/gamepage\", state: {...props, addToLibrary: {...addToLibrary}} }} />;\r\n//   //   }\r\n//   // };\r\n//   const doRedirect = (addToLibrary) => {\r\n//     if (redirect) {\r\n//       return <Redirect to={{pathname: \"/gamepage\", state: {game: props.game, addToLibrary: {addToLibrary}}}} />;\r\n//     }\r\n//   };\r\n\r\n//   let history = useHistory();\r\n\r\n//   const redirec = () => {\r\n//     history.push({pathname: \"/gamepage\", state: {...props}});\r\n//   };\r\n\r\n//   return (\r\n//     <div className={s.game}>\r\n//     {doRedirect()}\r\n//       <div onClick={redirec}>\r\n//         <a className={s.photo}>\r\n//           <img src={props.photo} />\r\n//         </a>\r\n//         <div className={s.name}>{props.name}</div>\r\n//         {props.lib === \"true\" ? (\r\n//           \"\"\r\n//         ) : (\r\n//           <div className={s.dev}>{props.developer}</div>\r\n//         )}\r\n//         <div className={s.action}>\r\n//           {props.price === \"Free\" ? (\r\n//             <div className={s.price}>{props.price}</div>\r\n//           ) : (\r\n//             <div className={s.price}>{props.price} ₴</div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//       <div className={s.btnAdd}>\r\n//         {props.game.added ? (\r\n//           <a\r\n//             onClick={() => {\r\n//               removeFromLibrary(props.game.id);\r\n//             }}\r\n//             href=\"#\"\r\n//           >\r\n//             Remove from library\r\n//           </a>\r\n//         ) : (\r\n//           <a\r\n//             onClick={() => {\r\n//               props.addToLibrary(props.game.id);\r\n//             }}\r\n//             href=\"#\"\r\n//           >\r\n//             Add to library\r\n//           </a>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n// class Game extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     console.log(props);\r\n//   }\r\n\r\n//   //  doRedirect = (addToLibrary) => {\r\n//   //   if (redirect) {\r\n//   //     return <Redirect to={{pathname: \"/gamepage\", state: {game: props.game, addToLibrary: {addToLibrary}}}} />;\r\n//   //   }\r\n//   // };\r\n\r\n//   redirect = () => {\r\n//     const { history } = this.props;\r\n//     history.push(\"/gamepage\", {state: this.props} );\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className={s.game}>\r\n//         <div onClick={this.redirect}>\r\n//           <a className={s.photo}>\r\n//             <img src={this.props.photo} />\r\n//           </a>\r\n//           <div className={s.name}>{this.props.name}</div>\r\n//           {this.props.lib === \"true\" ? (\r\n//             \"\"\r\n//           ) : (\r\n//             <div className={s.dev}>{this.props.developer}</div>\r\n//           )}\r\n//           <div className={s.action}>\r\n//             {this.props.price === \"Free\" ? (\r\n//               <div className={s.price}>{this.props.price}</div>\r\n//             ) : (\r\n//               <div className={s.price}>{this.props.price} ₴</div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//         <div className={s.btnAdd}>\r\n//           {this.props.game.added ? (\r\n//             <a\r\n//               onClick={() => {\r\n//                 this.props.removeFromLibrary(this.props.game.id);\r\n//               }}\r\n//               href=\"#\"\r\n//             >\r\n//               Remove from library\r\n//             </a>\r\n//           ) : (\r\n//             <a\r\n//               onClick={() => {\r\n//                 this.props.addToLibrary(this.props.game.id);\r\n//               }}\r\n//               href=\"#\"\r\n//             >\r\n//               Add to library\r\n//             </a>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}