{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport { languageAPI } from \"../api/api\";\nimport translationEN from \"../locales/en/translationEN.json\";\nimport translationRU from \"../locales/ru/translationRU.json\";\nlet initialState = {\n  language: undefined\n};\nconsole.log(initialState.language);\nconst SET_LANGUAGE = \"SET_LANGUAGE\";\n\nconst languageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LANGUAGE:\n      return {\n        language: action.language\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setLanguage = language => ({\n  type: SET_LANGUAGE,\n  language\n});\nexport const getLanguage = () => async dispatch => {\n  const response = await languageAPI.getLanguage();\n  i18n.changeLanguage(response.data.lng);\n  dispatch(setLanguage(response.data.lng));\n  console.log(response.data.lng);\n};\nexport const changeLanguage = language => async dispatch => {\n  const response = await languageAPI.changeLanguage(language);\n  i18n.changeLanguage(response.data.lng);\n  dispatch(setLanguage(response.data.lng));\n  console.log(response.data.lng);\n};\nexport { languageReducer };\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  ru: {\n    translation: translationRU\n  }\n};\ni18n.use(initReactI18next).init({\n  resources,\n  fallbackLng: initialState.language,\n  interpolation: {\n    escapeValue: false\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["C:/Users/vital/OneDrive/Desktop/ShadowStore/shadow-store/client/src/redux/language-reducer.js"],"names":["i18n","initReactI18next","languageAPI","translationEN","translationRU","initialState","language","undefined","console","log","SET_LANGUAGE","languageReducer","state","action","type","setLanguage","getLanguage","dispatch","response","changeLanguage","data","lng","resources","en","translation","ru","use","init","fallbackLng","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAEC;AADO,CAAnB;AAGAC,OAAO,CAACC,GAAR,CAAYJ,YAAY,CAACC,QAAzB;AACA,MAAMI,YAAY,GAAG,cAArB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,YAAL;AACE,aAAO;AAAEJ,QAAAA,QAAQ,EAAEO,MAAM,CAACP;AAAnB,OAAP;;AACF;AACE,aAAOM,KAAP;AAJJ;AAMD,CAPD;;AASA,OAAO,MAAMG,WAAW,GAAIT,QAAD,KAAe;AAAEQ,EAAAA,IAAI,EAAEJ,YAAR;AAAsBJ,EAAAA;AAAtB,CAAf,CAApB;AAEP,OAAO,MAAMU,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,QAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAACc,WAAZ,EAAvB;AACAhB,EAAAA,IAAI,CAACmB,cAAL,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,GAAlC;AACAJ,EAAAA,QAAQ,CAACF,WAAW,CAACG,QAAQ,CAACE,IAAT,CAAcC,GAAf,CAAZ,CAAR;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACE,IAAT,CAAcC,GAA1B;AACD,CALM;AAOP,OAAO,MAAMF,cAAc,GAAIb,QAAD,IAAc,MAAOW,QAAP,IAAoB;AAC9D,QAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAACiB,cAAZ,CAA2Bb,QAA3B,CAAvB;AACAN,EAAAA,IAAI,CAACmB,cAAL,CAAoBD,QAAQ,CAACE,IAAT,CAAcC,GAAlC;AACAJ,EAAAA,QAAQ,CAACF,WAAW,CAACG,QAAQ,CAACE,IAAT,CAAcC,GAAf,CAAZ,CAAR;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACE,IAAT,CAAcC,GAA1B;AACD,CALM;AAOP,SAASV,eAAT;AAEA,MAAMW,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,WAAW,EAAErB;AADX,GADY;AAIhBsB,EAAAA,EAAE,EAAE;AACFD,IAAAA,WAAW,EAAEpB;AADX;AAJY,CAAlB;AASAJ,IAAI,CAAC0B,GAAL,CAASzB,gBAAT,EAA2B0B,IAA3B,CAAgC;AAC9BL,EAAAA,SAD8B;AAE9BM,EAAAA,WAAW,EAAEvB,YAAY,CAACC,QAFI;AAG9BuB,EAAAA,aAAa,EAAE;AAAEC,IAAAA,WAAW,EAAE;AAAf;AAHe,CAAhC;AAMA,eAAe9B,IAAf","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport { languageAPI } from \"../api/api\";\r\nimport translationEN from \"../locales/en/translationEN.json\";\r\nimport translationRU from \"../locales/ru/translationRU.json\";\r\n\r\nlet initialState = {\r\n  language: undefined,\r\n};\r\nconsole.log(initialState.language);\r\nconst SET_LANGUAGE = \"SET_LANGUAGE\";\r\n\r\nconst languageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LANGUAGE:\r\n      return { language: action.language };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setLanguage = (language) => ({ type: SET_LANGUAGE, language });\r\n\r\nexport const getLanguage = () => async (dispatch) => {\r\n  const response = await languageAPI.getLanguage();\r\n  i18n.changeLanguage(response.data.lng);\r\n  dispatch(setLanguage(response.data.lng));\r\n  console.log(response.data.lng);\r\n};\r\n\r\nexport const changeLanguage = (language) => async (dispatch) => {\r\n  const response = await languageAPI.changeLanguage(language);\r\n  i18n.changeLanguage(response.data.lng);\r\n  dispatch(setLanguage(response.data.lng));\r\n  console.log(response.data.lng);\r\n};\r\n\r\nexport { languageReducer };\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN,\r\n  },\r\n  ru: {\r\n    translation: translationRU,\r\n  },\r\n};\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources,\r\n  fallbackLng: initialState.language,\r\n  interpolation: { escapeValue: false },\r\n});\r\n\r\nexport default i18n;\r\n"]},"metadata":{},"sourceType":"module"}